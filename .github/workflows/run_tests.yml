name: Realizar test para integrar con main
on:
  pull_request:
    branches:
      - main
    types:
      - opened
      - synchronize
      - reopened

jobs:
  run-tests:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout de repositorio
      uses: actions/checkout@v2
    - name: Configuración de entorno de python
      uses: actions/setup-python@v2
      with:
          python-version: '3.10'
    - name: Install pipenv
      run: |
        python -m pip install --upgrade pip
        python -m pip install pipenv

    - name: Install dependencies
      run: |
        cd post-management
        pipenv install
    - name: Correr pruebas
      id: correr-pruebas-post-management
      run: python -m unittest -v post-management/tests/*/test_*.py
    - name: Cálculo de cubrimiento
      id: cubrimiento
      run: |
          coverage run -m unittest post-management/tests/*/test_*.py
          coverage report -m
    - name: Check coverage
      run: |
        coverage=$(coverage report -m | grep TOTAL | awk '{print $NF}' | tr -d '%')
        if (( $(echo "$coverage > 70" | bc -l) )); then
          echo "Code coverage meets the requirement. Coverage: $coverage%"
          exit 0
        else
          echo "Code coverage does not meet the requirement. Coverage: $coverage%"
          exit 1
        fi

  merge-to-main:
    needs: run-tests
    runs-on: ubuntu-latest
    if: success()
    steps:
    - name: Merge Pull Request
      uses: actions/github-script@v4
      with:
        github-token: ${{ secrets.GITHUB_TOKEN }}
        script: |
          const result = await github.pulls.merge({
            owner: context.repo.owner,
            repo: context.repo.repo,
            pull_number: context.payload.pull_request.number
          });
          console.log(result);
